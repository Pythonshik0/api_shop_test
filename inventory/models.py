from django.db import models


class Type(models.Model):
    name = models.CharField(max_length=100)
    description = models.TextField()

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = "–¢–∏–ø"
        verbose_name_plural = "üìï –¢–∏–ø"


class Price(models.Model):
    currency = models.CharField(max_length=10)
    amount = models.DecimalField(max_digits=10, decimal_places=2)

    def __str__(self):
        return f"{self.amount} {self.currency}"

    class Meta:
        verbose_name = "–¶–µ–Ω–∞"
        verbose_name_plural = "üìÆ –¶–µ–Ω–∞ (Price)"


class Product(models.Model):
    name = models.CharField(max_length=100)
    price = models.ForeignKey(Price, on_delete=models.CASCADE)
    quantity = models.IntegerField()
    barcode = models.CharField(max_length=100, unique=True)
    updated_at = models.DateTimeField(auto_now=True)
    product_type = models.ForeignKey(Type, on_delete=models.CASCADE)

    def __str__(self):
        return self.name

    def reduce_quantity(self, quantity):
        if quantity <= 0:
            raise ValueError("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")

        if self.quantity >= quantity:
            self.quantity -= quantity
            self.save()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        else:
            raise ValueError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è.")

    class Meta:
        verbose_name = "–ü—Ä–æ–¥—É–∫—Ç"
        verbose_name_plural = "üßÆ –ü—Ä–æ–¥—É–∫—Ç"